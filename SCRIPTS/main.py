###########################################################################################
###########################################################################################
###  Se importan los paquetes y funciones necesarios y se nombran los directorios #########
###########################################################################################
###########################################################################################
###########################################################################################
###  Notas:  ##############################################################################
###  sys.path.append(dir_main): añade la ruta principal al sys.path  ######################
###########################################################################################
###########################################################################################
###########################################################################################

from config import os, sys, np, plt, namedtuple, Radtrans, cst, petitradtrans_config_parser

dir_main = os.getcwd()

if dir_main not in sys.path:
    sys.path.append(dir_main)
    
dir_funciones = os.path.join(dir_main, "fcn")
dir_figures = os.path.join(dir_main, "figures")
dir_data_input = os.path.join(dir_main, "..", "data_input")
dir_opacidades = os.path.join(dir_main, "..", "data_input", "opacidades")

sys.path.append(dir_funciones)
petitradtrans_config_parser.set_input_data_path(dir_opacidades)

from get_params import get_params
from get_atm_profile import get_atm_profile
from get_mass_fractions import get_mass_fractions
from object_prt import object_prt
from calc_transit_radius import calc_transit_radius
from plot_figures import plot_figures
from get_pt_profile import get_pt_profile
from get_abund_profile import get_abund_profile
from export_data import export_data

###########################################################################################
###########################################################################################
###  caso= 'ben1' o 'ben2' o 'hab1'  modo= 'fichero' o 'fastchem' aerosol= 'si' o 'no' ####
###########################################################################################

caso = 'ben1'
modo = 'fichero'
aerosol = 'no'

###########################################################################################
###########################################################################################
###  Llamada a la función get_params  ###########y##########################################
###########################################################################################
###########################################################################################
###########################################################################################
###  Notas:  ##############################################################################
###  -Devuelve los parámetros (divididos en estructuras) asociados al caso seleccionado  ##
###########################################################################################
###########################################################################################
###########################################################################################

params_planet, params_basic = get_params(dir_main, caso)

###########################################################################################
###########################################################################################
###  Llamada a la función get_atm_profiles  ###############################################
###########################################################################################
###########################################################################################
###########################################################################################
###  Notas:  ##############################################################################
###  -Esta función devuelve los parámetros necesarios para posteriormente obtener la ######
###  fracción en masa dado un perfil p-t (en el caso fastchem, en el caso fichero, las  ###
###  fracciones en masa ya vienen dadas)  #################################################
###########################################################################################
###########################################################################################
###########################################################################################

params_Xmass_species, params_fastchem = get_atm_profile(caso, modo, dir_main, params_basic)

###########################################################################################
###########################################################################################
###  Llamada a la función get_pt_profile  #################################################
###########################################################################################
###########################################################################################
###########################################################################################
###  Notas:  ##############################################################################
###  -Esta función devuelve el perfil p-t del caso seleccionado  ##########################
###########################################################################################
###########################################################################################
###########################################################################################

perfil_pt = get_pt_profile(params_basic)

###########################################################################################
###########################################################################################
###  Llamada a la función get_mass_fractions   ############################################
###########################################################################################
###########################################################################################
###########################################################################################
###  Notas:  ##############################################################################
###  -Esta función calcula la fraccion en masa de cada especie (en el caso fastchem, en ###
###  en caso fichero, las fracciones en masa ya vienen dadas)  ############################
###########################################################################################
###########################################################################################
###########################################################################################

mass_fractions  = get_mass_fractions(modo, params_basic, params_Xmass_species, params_fastchem)
print(mass_fractions)

###########################################################################################
###########################################################################################
###  Llamada a la función get_abund_profile  ##############################################
###########################################################################################
###########################################################################################
###########################################################################################
###  Notas:  ##############################################################################
###  -Esta función devuelve el perfil de la abundancia química de las especies del caso  ##
###  seleccionado  ########################################################################
###########################################################################################
###########################################################################################
###########################################################################################

perfil_abundancias = get_abund_profile(params_basic, mass_fractions)

###########################################################################################
###########################################################################################
###  Se crea el objeto radtrans  ##########################################################
###########################################################################################
###########################################################################################
###########################################################################################

atmosphere = object_prt(aerosol, params_basic, modo)

###########################################################################################
###########################################################################################
###  Llamada a la función calcular_radio_transito #########################################
###########################################################################################
###########################################################################################
###########################################################################################

wavelengths_cm, radio_transito_cm, depth_ppm = calc_transit_radius(modo, aerosol, mass_fractions, atmosphere, params_basic, params_planet)

###########################################################################################
###########################################################################################
###  Llamada a la función export_data  ####################################################
###########################################################################################
###########################################################################################
###  Notas:  activar solo cuando se quieran guardar los resultados  #######################
###########################################################################################
###########################################################################################
###########################################################################################

#output_data = export_data(modo, dir_main, mass_fractions, wavelengths_cm, radio_transito_cm, params_basic, depth_ppm)

###########################################################################################
###########################################################################################
###  Llamada a la función plot_figures  ###################################################
###########################################################################################
###########################################################################################
###########################################################################################

figura = plot_figures(wavelengths_cm * 1e4, depth_ppm, dir_figures, caso, modo, params_basic, xlabel='Longitud de onda (μm)', ylabel=r'Profundidad de tránsito (ppm)', xscale='log', figsize=(10, 6), label=None)






