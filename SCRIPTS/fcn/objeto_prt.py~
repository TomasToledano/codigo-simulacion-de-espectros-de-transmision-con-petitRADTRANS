from config import Radtrans

def objeto_prt(aerosol, params_basic):
    """
    Devuelve el objeto radtrans guardado en la variable atmosphere que se usará para hacer espectros.

    Notas: se guardan en excluded_species el helio y N2 para no añadirlos a line_species, prt no lo añade porque es químicamente inerte, sí que afecta 
    en los choques, en mass fractions y en peso molecular medio.
    
    Args: params_basic porque se necesita la presión y las especies químicas que se van a usar

    Return: objeto RADTRANS guardado en la variable atmosphere.

    """
    if aerosol == 'no':
    
        line_species = []
        # Conjunto con especies a excluir porque prt no utiliza N2 para lineas
        excluded_species = {"He", "N2"}  

        for elements in params_basic.species_labels:
            if elements not in excluded_species:
                line_species.append(f"{elements}.R100")

        
                atmosphere = Radtrans(
                    pressures=params_basic.pressures_bar,
                    wavelength_boundaries=[0.3, 50],
                    line_species = line_species,
                    rayleigh_species=['N2'],
                    gas_continuum_contributors=['N2--N2', 'CO2--CO2']
                )
      
                return atmosphere

    elif aerosol == 'si':
        
        line_species = []
        # Conjunto con especies a excluir porque prt no utiliza N2 para lineas
        excluded_species = {"He", "N2"}  

        for elements in params_basic.species_labels:
            if elements not in excluded_species:
                line_species.append(f"{elements}.R100")

        
                atmosphere = Radtrans(
                    pressures=params_basic.pressures_bar,
                    wavelength_boundaries=[0.3, 50],
                    line_species = line_species,
                    rayleigh_species=['N2'],
                    gas_continuum_contributors=['N2--N2', 'CO2--CO2'],
                    cloud_species = ['H2O(s)_crystalline__Mie']
                )
      
                return atmosphere
